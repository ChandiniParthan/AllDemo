name: MyProject CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_ENV: production
      DOCKER_REGISTRY: my-docker-registry.com
      APP_NAME: my-java-app

    steps:
    # Optimization: Using the latest version of checkout action
    - name: Checkout code
      uses: actions/checkout@v3

    # Optimization: Combined initialization steps to reduce the number of shell invocations
    - name: Initialize
      run: |
        echo "Initializing pipeline for ${APP_NAME} in ${BUILD_ENV} environment"
        java -version

    # Optimization: Combined static analysis steps to reduce the number of shell invocations
    - name: Static Analysis
      run: |
        echo 'Running Code Analysis...'
        ./gradlew checkstyleMain lint

    # Optimization: Combined build and test steps to reduce the number of shell invocations
    - name: Build and Test
      run: |
        echo 'Building Application and Running Unit Tests...'
        ./gradlew build test

    # Optimization: Combined code coverage steps to reduce the number of shell invocations
    - name: Code Coverage
      run: |
        echo 'Generating Code Coverage Report...'
        ./gradlew jacocoTestReport

    # Optimization: Using a more descriptive name for the artifact
    - name: Publish Code Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: build/reports/jacoco/index.html

    # Optimization: Combined Docker build and push steps to reduce the number of shell invocations
    - name: Docker Build and Push
      run: |
        echo 'Building and Pushing Docker Image...'
        docker build -t ${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_ENV} .
        docker push ${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_ENV}

    # Optimization: Added a step to ensure kubectl is installed before deployment
    - name: Setup kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy to Kubernetes
      run: |
        echo 'Deploying Application to Kubernetes...'
        kubectl apply -f k8s/deployment.yaml

  post:
    always:
      steps:
      # Optimization: Using a more descriptive name for the artifact
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: '**/build/libs/*.jar'

    success:
      steps:
      - name: Notify Success
        run: |
          echo 'Pipeline succeeded!'
          echo "The pipeline for ${APP_NAME} succeeded. Build available at ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | mail -s "Build Success: ${APP_NAME}" team@example.com

    failure:
      steps:
      - name: Notify Failure
        run: |
          echo 'Pipeline failed.'
          echo "The pipeline for ${APP_NAME} failed. Check logs at ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | mail -s "Build Failed: ${APP_NAME}" team@example.com