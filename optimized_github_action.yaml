name: MyProject CI/CD

on:
  push:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      BUILD_ENV: production

    steps:
    # Optimization: Checkout code is necessary to fetch the latest code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Optimization: Combine build and test steps to reduce the number of steps and improve performance
    - name: Build and Test
      run: |
        ./build.sh
        ./test.sh

    # Optimization: Deploy step remains the same as it is a critical part of the pipeline
    - name: Deploy
      run: ./deploy.sh

    # Optimization: Archive artifacts and publish test results in parallel to save time
    - name: Archive Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: JAR Files
        path: '**/target/*.jar'

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Reports
        path: 'reports/**/*.xml'

    # Optimization: Combine success and failure notifications into a single step to reduce redundancy
    - name: Notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo 'Pipeline succeeded!';
        else
          echo 'Pipeline failed.';
        fi