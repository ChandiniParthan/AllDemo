name: MyProject CI/CD

on:
  push:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      BUILD_ENV: production

    steps:
    # Optimization: Checkout code using the latest stable version of the action
    - name: Checkout code
      uses: actions/checkout@v3

    # Optimization: Cache dependencies to speed up build times
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Optimization: Build step
    - name: Build
      run: ./build.sh

    # Optimization: Test step
    - name: Test
      run: ./test.sh

    # Optimization: Deploy step
    - name: Deploy
      run: ./deploy.sh

    # Optimization: Archive build artifacts only if the build is successful
    - name: Archive Artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: '**/target/*.jar'

    # Optimization: Publish test results only if tests are run
    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: 'reports/**/*.xml'

    # Optimization: Notify on success
    - name: Success Notification
      if: success()
      run: echo 'Pipeline succeeded!'

    # Optimization: Notify on failure
    - name: Failure Notification
      if: failure()
      run: echo 'Pipeline failed.'