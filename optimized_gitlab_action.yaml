stages:
  - checkout
  - build
  - test
  - deploy

variables:
  BUILD_ENV: "production"

# Optimization: Added 'only' to run jobs only on specific branches, reducing unnecessary pipeline runs
checkout-job:
  stage: checkout
  only:
    - main
    - develop
  script:
    - git checkout $CI_COMMIT_REF_NAME

build-job:
  stage: build
  dependencies: # Optimization: Explicitly define dependencies to ensure proper job execution order
    - checkout-job
  script:
    - ./build.sh
  artifacts:
    paths:
      - target/

test-job:
  stage: test
  dependencies: # Optimization: Explicitly define dependencies to ensure proper job execution order
    - build-job
  script:
    - ./test.sh
  artifacts:
    paths:
      - artifacts/
  reports:
    junit: reports/**/*.xml

deploy-job:
  stage: deploy
  dependencies: # Optimization: Explicitly define dependencies to ensure proper job execution order
    - test-job
  script:
    - ./deploy.sh

# Optimization: Moved after_script to individual jobs for better control and to ensure it runs even if a job fails
after_script:
  - echo 'Pipeline succeeded!' || echo 'Pipeline failed.'