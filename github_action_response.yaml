name: Project CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set environment variable
      run: echo "NODE_ENV=test" >> $GITHUB_ENV

    - name: Print environment variable
      run: echo "Environment will be : ${{ env.NODE_ENV }}"

    - name: Check Node.js version
      run: node -v

    - name: Prune npm
      run: npm prune

    - name: Install npm dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build_docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: ./dockerBuild.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build_docker

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Push Docker image to repository
      run: ./dockerPushToRepo.sh

    - name: SSH to web server and pull new image
      run: ssh deploy@xxxxx.xxxxx.com running/xxxxxxx/dockerRun.sh

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Prune npm
      run: npm prune

    - name: Remove node_modules
      run: rm -rf node_modules

    - name: Send success email
      run: |
        echo "project build successful" | mail -s "project build successful" -r "xxxx@yyyyy.com" "yyyyy@yyyy.com"

  failure:
    runs-on: ubuntu-latest
    if: failure()

    steps:
    - name: Send failure email
      run: |
        echo "project build error is here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" | mail -s "project build failed" -r "xxxx@yyyy.com" "zzzz@yyyyy.com"