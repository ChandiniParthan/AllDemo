name: MyProject CI/CD

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io/myorg

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set environment variables
        run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

  build_and_test:
    runs-on: ubuntu-latest
    needs: checkout
    strategy:
      matrix:
        service: [serviceA, serviceB]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
      - name: Build ${{ matrix.service }}
        run: |
          echo "Building ${{ matrix.service }}..."
          cd ${{ matrix.service }}
          ./gradlew build
      - name: Run Tests
        if: matrix.service == 'serviceA'
        run: |
          echo "Running Tests..."
          ./gradlew test

  dockerize:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker Images
        run: |
          echo "Building Docker Images..."
          docker-compose build

  push_docker_images:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Tag and Push Docker Images
        run: |
          echo "Pushing Docker Images to Registry..."
          docker tag service-a ${{ env.REGISTRY }}/service-a:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/service-a:${{ env.IMAGE_TAG }}
          docker tag service-b ${{ env.REGISTRY }}/service-b:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/service-b:${{ env.IMAGE_TAG }}

  deploy_to_staging:
    runs-on: ubuntu-latest
    needs: push_docker_images
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to Staging Environment
        run: |
          echo "Deploying to Staging Environment..."
          kubectl apply -f staging/deployment.yaml

  post:
    runs-on: ubuntu-latest
    steps:
      - name: Always run
        run: echo "Pipeline finished."
      - name: On success
        if: success()
        run: echo "Pipeline succeeded!"
      - name: On failure
        if: failure()
        run: echo "Pipeline failed!"