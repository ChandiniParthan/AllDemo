name: MyProject CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Node.js version
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Print Node.js version
      run: node -v

    - name: Prune npm packages
      run: npm prune

    - name: Install npm packages
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build Docker image
      run: ./dockerBuild.sh

    - name: Push Docker image to repository
      run: ./dockerPushToRepo.sh

    - name: Deploy to web server
      run: ssh deploy@xxxxx.xxxxx.com running/xxxxxxx/dockerRun.sh

    - name: Cleanup npm packages
      run: npm prune

    - name: Remove node_modules
      run: rm -rf node_modules

    - name: Send success email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.your-email.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: 'project build successful'
        body: 'project build successful'
        to: 'yyyyy@yyyy.com'
        from: 'xxxx@yyyyy.com'

  on_failure:
    runs-on: ubuntu-latest

    steps:
    - name: Send failure email
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.your-email.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: 'project build failed'
        body: "project build error is here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        to: 'zzzz@yyyyy.com'
        from: 'xxxx@yyyy.com'